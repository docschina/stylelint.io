{"head":{"description":"常见问题 如何关闭、禁用或者忽略一个规则？ 您可以在配置文件中将配置值设置为 null。 比如说，我想使用 stylelint-config-standard 配置却又想禁用 at-rule-empty-line-before 规则，我可以这样设置： 您也可以在 CSS…","title":"常见问题"},"body":"<h1 id=\"常见问题\"><a href=\"#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\" class=\"phenomic-HeadingAnchor\">#</a>常见问题</h1>\n<ul>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E5%85%B3%E9%97%AD%E3%80%81%E7%A6%81%E7%94%A8%E6%88%96%E8%80%85%E5%BF%BD%E7%95%A5%E4%B8%80%E4%B8%AA%E8%A7%84%E5%88%99%EF%BC%9F\">如何关闭、禁用或者忽略一个规则？</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%EF%BC%9F\">如何通过命令行检查代码？</a></li>\n<li><a href=\"#%E6%80%8E%E6%A0%B7%E9%80%9A%E8%BF%87-git-%E9%A2%84%E6%8F%90%E4%BA%A4%E9%92%A9%E5%AD%90%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%EF%BC%9F\">怎样通过 Git 预提交钩子检查代码？</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E5%9C%A8%E4%BB%BB%E5%8A%A1%E8%BF%90%E8%A1%8C%E5%99%A8%E4%B8%AD%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%EF%BC%9F\">如何在任务运行器中检查代码？</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E5%9C%A8%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E4%B8%AD%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%EF%BC%9F\">如何在文本编辑器中检查代码？</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E6%A3%80%E6%9F%A5-scss%E3%80%81less-%E6%88%96%E8%80%85%E5%85%B6%E4%BB%96%E9%9D%9E%E6%A0%87%E5%87%86%E8%AF%AD%E6%B3%95%E4%BB%A3%E7%A0%81%EF%BC%9F\">如何检查 SCSS、Less 或者其他非标准语法代码？</a></li>\n<li><a href=\"#%E6%88%91%E5%BA%94%E8%AF%A5%E5%9C%A8%E9%80%9A%E8%BF%87-postcss-%E6%8F%92%E4%BB%B6%E6%88%96%E5%85%B6%E4%BB%96%E5%A4%84%E7%90%86%E5%99%A8%E5%A4%84%E7%90%86%E6%A0%B7%E5%BC%8F%E8%A1%A8%E4%B9%8B%E5%89%8D%E8%BF%98%E6%98%AF%E4%B9%8B%E5%90%8E%E8%BF%9B%E8%A1%8C%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5%EF%BC%9F\">我应该在通过 PostCSS 插件或其他处理器处理样式表之前还是之后进行代码检查？</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E8%87%AA%E5%8A%A8%E4%BF%AE%E5%A4%8D%E9%A3%8E%E6%A0%BC%E8%BF%9D%E8%A7%84%EF%BC%9F\">如何自动修复风格违规？</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E7%AE%A1%E7%90%86%E8%A7%84%E5%88%99%E4%B9%8B%E9%97%B4%E7%9A%84%E5%86%B2%E7%AA%81%EF%BC%9F\">如何管理规则之间的冲突？</a></li>\n<li><a href=\"#%E6%8F%92%E4%BB%B6%E5%92%8C%E8%A7%84%E5%88%99%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F\">插件和规则有什么区别？</a></li>\n<li><a href=\"#%E6%88%91%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%AE%9A%E4%B9%89-stylelint-%E7%9A%84%E6%B6%88%E6%81%AF%E5%90%97%EF%BC%9F\">我可以自定义 stylelint 的消息吗？</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E7%94%A8-stylelint-%E6%9D%A5%E5%A4%84%E7%90%86%E9%81%B5%E5%BE%AA%E7%B1%BB-bem-%E6%A8%A1%E5%BC%8F%E7%9A%84-css-%E6%96%87%E4%BB%B6%EF%BC%9F\">如何用 stylelint 来处理遵循类 BEM 模式的 CSS 文件？</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E7%A6%81%E7%94%A8%E5%8D%95%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%9D%97%EF%BC%9F\">如何禁用单行代码块？</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E7%94%A8%E7%9F%AD%E6%A8%AA%E7%BA%BF%E9%9A%94%E5%BC%80-kebab-case-%E7%AD%89%E5%B8%B8%E8%A7%81-css-%E5%91%BD%E5%90%8D%E7%BA%A6%E5%AE%9A%E9%85%8D%E7%BD%AE--pattern-%E8%A7%84%E5%88%99%EF%BC%9F\">如何用短横线隔开 (kebab-case) 等常见 CSS 命名约定配置 *-pattern 规则？</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E5%B0%86%E9%BB%98%E8%AE%A4%E4%B8%A5%E9%87%8D%E6%80%A7%E7%BA%A7%E5%88%AB%E6%9B%B4%E6%94%B9%E4%B8%BA%E8%AD%A6%E5%91%8A%EF%BC%8C%E4%BB%A5%E4%BE%BF-stylelint-%E4%B8%8D%E4%BC%9A%E7%A0%B4%E5%9D%8F%E6%88%91%E7%9A%84%E6%9E%84%E5%BB%BA%EF%BC%9F\">如何将默认严重性级别更改为“警告”，以便 stylelint 不会破坏我的构建？</a></li>\n<li><a href=\"#%E6%88%91%E5%8F%AF%E4%BB%A5%E5%9C%A8%E4%B8%80%E4%B8%AA-npm-%E5%8C%85%E4%B8%AD%E6%8D%86%E7%BB%91%E5%A4%9A%E4%B8%AA%E5%8F%AF%E5%85%B1%E4%BA%AB%E9%85%8D%E7%BD%AE%E5%90%97%EF%BC%9F\">我可以在一个 npm 包中捆绑多个可共享配置吗？</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E6%8E%A7%E5%88%B6%E5%9D%97%E7%9A%84%E5%BC%80%E5%A4%A7%E6%8B%AC%E5%8F%B7%E5%90%8E%E7%9A%84%E7%A9%BA%E7%99%BD%E7%AC%A6%EF%BC%9F\">如何控制块的开大括号后的空白符？</a></li>\n<li><a href=\"#%E5%A6%82%E6%9E%9C%E6%88%91%E5%9C%A8%E9%85%8D%E7%BD%AE%E5%AF%B9%E8%B1%A1%E4%B8%AD%E4%BD%BF%E7%94%A8-extends%EF%BC%8C%E9%82%A3%E6%AF%8F%E4%B8%AA%E8%A7%84%E5%88%99%E7%9A%84%E9%80%89%E9%A1%B9%E6%98%AF%E4%BC%9A%E8%A2%AB%E5%90%88%E5%B9%B6%E8%BF%98%E6%98%AF%E8%A6%86%E7%9B%96%EF%BC%9F\">如果我在配置对象中使用 extends，那每个规则的选项是会被合并还是覆盖？</a></li>\n</ul>\n<h2 id=\"如何关闭、禁用或者忽略一个规则？\"><a href=\"#%E5%A6%82%E4%BD%95%E5%85%B3%E9%97%AD%E3%80%81%E7%A6%81%E7%94%A8%E6%88%96%E8%80%85%E5%BF%BD%E7%95%A5%E4%B8%80%E4%B8%AA%E8%A7%84%E5%88%99%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如何关闭、禁用或者忽略一个规则？</h2>\n<p>您可以在配置文件中将配置值设置为 <code>null</code>。</p>\n<p>比如说，我想使用 <code>stylelint-config-standard</code> 配置却又想禁用 <code>at-rule-empty-line-before</code> 规则，我可以这样设置：</p>\n<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"extends\"</span>: <span class=\"hljs-string\">\"stylelint-config-standard\"</span>,\n  <span class=\"hljs-attr\">\"rules\"</span>: {\n    <span class=\"hljs-attr\">\"at-rule-empty-line-before\"</span>: <span class=\"hljs-literal\">null</span>\n  }\n}</code></pre>\n<p>您也可以在 CSS 文件的某个特定区域内禁用一个规则。想了解更多可以参考<a href=\"../configuration/#rules\">配置指南</a>的规则部分。</p>\n<h2 id=\"如何通过命令行检查代码？\"><a href=\"#%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如何通过命令行检查代码？</h2>\n<p>参考文档的<a href=\"../cli/\">命令行界面部分</a>。</p>\n<p>命令行界面也可以在 <a href=\"https://blog.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/\">npm run scripts</a> 中使用以使用非全局安装的 stylelint。</p>\n<h2 id=\"怎样通过-git-预提交钩子检查代码？\"><a href=\"#%E6%80%8E%E6%A0%B7%E9%80%9A%E8%BF%87-git-%E9%A2%84%E6%8F%90%E4%BA%A4%E9%92%A9%E5%AD%90%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>怎样通过 Git 预提交钩子检查代码？</h2>\n<p><a href=\"https://github.com/okonet/lint-staged\">lint-staged</a> 是一个 Node.js 脚本，可以在每次 Git 暂存文件时运行 stylelint.</p>\n<h2 id=\"如何在任务运行器中检查代码？\"><a href=\"#%E5%A6%82%E4%BD%95%E5%9C%A8%E4%BB%BB%E5%8A%A1%E8%BF%90%E8%A1%8C%E5%99%A8%E4%B8%AD%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如何在任务运行器中检查代码？</h2>\n<p>stylelint 社区为热门任务运行者维护<a href=\"../complementary-tools/#%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E6%8F%92%E4%BB%B6\">相应插件</a>，包括 gulp、webpack、Broccoli 和 Grunt。请参阅他们的自述文档以开始使用。</p>\n<p>如果您使用的任务运行器没有对应的 stylelint 插件，您可以将 stylelint 作为 PostCSS 插件使用，从而利用 PostCSS 提供的<a href=\"https://github.com/postcss/postcss#runners\">大量的</a> 任务运行器插件。</p>\n<p>这里还有一些通过 PostCSS JS 应用程序接口使用 PostCSS 插件的示例在<a href=\"../postcss-plugin/\">文档</a>中的。</p>\n<p>但是，使用 stylelint 作为 PostCSS 插件会限制您可用的报告选项，只能使用<a href=\"https://github.com/postcss/postcss-reporter/\">postcss-reporter</a> 所提供的选项。为了有更好的报告选项，我们推荐通过 stylelint Node.js 应用程序接口来使用 stylelint。</p>\n<h2 id=\"如何在文本编辑器中检查代码？\"><a href=\"#%E5%A6%82%E4%BD%95%E5%9C%A8%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E4%B8%AD%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如何在文本编辑器中检查代码？</h2>\n<p>stylelint 社区也为流行的文本编辑器提供了很多<a href=\"../complementary-tools/#%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6\">相应的插件</a>。请参阅他们的自述文档以开始使用。</p>\n<h2 id=\"如何检查-scss、less-或者其他非标准语法代码？\"><a href=\"#%E5%A6%82%E4%BD%95%E6%A3%80%E6%9F%A5-scss%E3%80%81less-%E6%88%96%E8%80%85%E5%85%B6%E4%BB%96%E9%9D%9E%E6%A0%87%E5%87%86%E8%AF%AD%E6%B3%95%E4%BB%A3%E7%A0%81%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如何检查 SCSS、Less 或者其他非标准语法代码？</h2>\n<p>stylelint 默认地能<em>解析</em>如下的非标准语法，包括Sass、Less 和 SugarSS，非标准语法可以从以下文件扩展名 <code>.sass</code>、<code>.scss</code>、<code>.less</code> 和 <code>.sss</code> 中自动推断出来。或者您也可以自己指定语法。</p>\n<p>此外，在使用命令行界面或 Node.js 应用程序接口时，stylelint 可以接受任何<a href=\"https://github.com/postcss/postcss#syntaxes\">PostCSS兼容语法</a>。但请注意，stylelint 无法保证核心规则可以在上面列出的默认值以外的语法中正常工作。</p>\n<p>可以参考<a href=\"../css-processors/#%E8%A7%A3%E6%9E%90%E9%9D%9E%E6%A0%87%E5%87%86%E8%AF%AD%E6%B3%95\">文档</a>来了解如何配置 stylelint 来解析非标准语法。</p>\n<h2 id=\"我应该在通过-postcss-插件或其他处理器处理样式表之前还是之后进行代码检查？\"><a href=\"#%E6%88%91%E5%BA%94%E8%AF%A5%E5%9C%A8%E9%80%9A%E8%BF%87-postcss-%E6%8F%92%E4%BB%B6%E6%88%96%E5%85%B6%E4%BB%96%E5%A4%84%E7%90%86%E5%99%A8%E5%A4%84%E7%90%86%E6%A0%B7%E5%BC%8F%E8%A1%A8%E4%B9%8B%E5%89%8D%E8%BF%98%E6%98%AF%E4%B9%8B%E5%90%8E%E8%BF%9B%E8%A1%8C%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>我应该在通过 PostCSS 插件或其他处理器处理样式表之前还是之后进行代码检查？</h2>\n<p>我们<a href=\"../css-processors/\">推荐</a>在源文件进行任何转换之前检查您的源文件。</p>\n<h2 id=\"如何自动修复风格违规？\"><a href=\"#%E5%A6%82%E4%BD%95%E8%87%AA%E5%8A%A8%E4%BF%AE%E5%A4%8D%E9%A3%8E%E6%A0%BC%E8%BF%9D%E8%A7%84%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如何自动修复风格违规？</h2>\n<p>使用命令行界面标志 <code>--fix</code> 或 Node.js 应用程序接口选项 <code>fix</code>，通过这个<em>实验性</em>功能来修复许多风格违规。</p>\n<h2 id=\"如何管理规则之间的冲突？\"><a href=\"#%E5%A6%82%E4%BD%95%E7%AE%A1%E7%90%86%E8%A7%84%E5%88%99%E4%B9%8B%E9%97%B4%E7%9A%84%E5%86%B2%E7%AA%81%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如何管理规则之间的冲突？</h2>\n<p>由于每条规则都是独立的，所以有时配置规则时可能会与其他规则产生冲突。比如说，您可以同时启用两个冲突的黑名单和白名单规则，如 <code>unit-blacklist</code> 和 <code>unit-whitelist</code>。</p>\n<p>而您作为配置文件的作者，要责无旁贷地处理这些规则冲突。</p>\n<h2 id=\"插件和规则有什么区别？\"><a href=\"#%E6%8F%92%E4%BB%B6%E5%92%8C%E8%A7%84%E5%88%99%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>插件和规则有什么区别？</h2>\n<p>一条规则必须符合开发者指南中列出的<a href=\"../../developer-guide/rules/\">标准</a>，其中包括仅规则仅适用于标准 CSS 语法，是否具有一个明确的完成状态。而插件是由社区构建的规则或规则集，不必遵循标准。它可能支持特定的方法论、工具集、<em>非标准</em>的构造和功能、特定用例。</p>\n<p>例如，我们发现强制规定属性顺序，属性分组等的规则更适合作为插件，因为大家对于要执行什么，以及如何执行有很多不同的看法。当您在编写或使用一个插件时，您可以确保强制执行您自己的特定偏好；但一个规则如果试图满足太多的不同用例会变得一团糟糕。</p>\n<p>插件是很容易合并到您的配置中的。</p>\n<h2 id=\"我可以自定义-stylelint-的消息吗？\"><a href=\"#%E6%88%91%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%AE%9A%E4%B9%89-stylelint-%E7%9A%84%E6%B6%88%E6%81%AF%E5%90%97%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>我可以自定义 stylelint 的消息吗？</h2>\n<p>是的，您可以使用 <a href=\"../configuration/#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B6%88%E6%81%AF\"><code>message</code> 辅助选项</a>或<a href=\"../../developer-guide/formatters/\">编写您自己的格式化程序</a>。</p>\n<h2 id=\"如何用-stylelint-来处理遵循类-bem-模式的-css-文件？\"><a href=\"#%E5%A6%82%E4%BD%95%E7%94%A8-stylelint-%E6%9D%A5%E5%A4%84%E7%90%86%E9%81%B5%E5%BE%AA%E7%B1%BB-bem-%E6%A8%A1%E5%BC%8F%E7%9A%84-css-%E6%96%87%E4%BB%B6%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如何用 stylelint 来处理遵循类 BEM 模式的 CSS 文件？</h2>\n<p>您可以使用 <a href=\"https://github.com/davidtheclark/stylelint-selector-bem-pattern\">stylelint-selector-bem-pattern</a> 插件确保您的选择器符合所选的 BEM 风格模式。</p>\n<p>您还可以利用 <code>selector-*</code> 规则来禁止某些类型的选择器（例如ID选择器）和控制优先级。</p>\n<p>如果您正在使用 SUITCSS，则可能需要使用<a href=\"https://github.com/suitcss/stylelint-config-suitcss\">他们的可共享配置</a>。</p>\n<h2 id=\"如何禁用单行代码块？\"><a href=\"#%E5%A6%82%E4%BD%95%E7%A6%81%E7%94%A8%E5%8D%95%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%9D%97%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如何禁用单行代码块？</h2>\n<pre><code class=\"hljs   language-css\">  <span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: red; }\n<span class=\"hljs-comment\">/** ↑\n * Declaration blocks like this */</span></code></pre>\n<p>可以一起使用 <code>block-opening-brace-newline-after</code> 和 <code>block-opening-brace-newline-before</code> 规则，比如如下配置：</p>\n<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"block-opening-brace-newline-after\"</span>: [<span class=\"hljs-string\">\"always\"</span>],\n  <span class=\"hljs-attr\">\"block-closing-brace-newline-before\"</span>: [<span class=\"hljs-string\">\"always\"</span>]\n}</code></pre>\n<p>如下样式表可以通过上述规则：</p>\n<pre><code class=\"hljs   language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: red;\n}</code></pre>\n<p>但是如下样式表却不能通过：</p>\n<pre><code class=\"hljs   language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: red;\n}\n\n<span class=\"hljs-selector-tag\">a</span> {\n<span class=\"hljs-attribute\">color</span>: red; }\n\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: red; }</code></pre>\n<p>如果想允许单行代码块同时在多行代码块中强制使用换行符，可以设置上述两条规则选项为 <code>\"always-multi-line\"</code>。</p>\n<h2 id=\"如何用短横线隔开-kebab-case-等常见-css-命名约定配置--pattern-规则？\"><a href=\"#%E5%A6%82%E4%BD%95%E7%94%A8%E7%9F%AD%E6%A8%AA%E7%BA%BF%E9%9A%94%E5%BC%80-kebab-case-%E7%AD%89%E5%B8%B8%E8%A7%81-css-%E5%91%BD%E5%90%8D%E7%BA%A6%E5%AE%9A%E9%85%8D%E7%BD%AE--pattern-%E8%A7%84%E5%88%99%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如何用短横线隔开 (kebab-case) 等常见 CSS 命名约定配置 <code>*-pattern</code> 规则？</h2>\n<p>使用与您选择的约定相对应的正则表达式：</p>\n<ul>\n<li>短横线命名(kebab-case): <code>^([a-z][a-z0-9]*)(-[a-z0-9]+)*$</code></li>\n<li>小驼峰命名(lowerCamelCase): <code>^[a-z][a-zA-Z0-9]+$</code></li>\n<li>蛇形命名(snake_case): <code>^([a-z][a-z0-9]*)(_[a-z0-9]+)*$</code></li>\n<li>大驼峰命名(UpperCamelCase): <code>^[A-Z][a-zA-Z0-9]+$</code></li>\n</ul>\n<p>比如，对于遵循小驼峰拼写式的类选择器，使用 <code>\"selector-class-pattern\": \"^[a-z][a-zA-Z0-9]+$\"</code>。</p>\n<p>所有这些模式都不允许以数字，两个连字符或后跟数字的连字符开头的CSS标识符。</p>\n<h2 id=\"如何将默认严重性级别更改为警告，以便-stylelint-不会破坏我的构建？\"><a href=\"#%E5%A6%82%E4%BD%95%E5%B0%86%E9%BB%98%E8%AE%A4%E4%B8%A5%E9%87%8D%E6%80%A7%E7%BA%A7%E5%88%AB%E6%9B%B4%E6%94%B9%E4%B8%BA%E8%AD%A6%E5%91%8A%EF%BC%8C%E4%BB%A5%E4%BE%BF-stylelint-%E4%B8%8D%E4%BC%9A%E7%A0%B4%E5%9D%8F%E6%88%91%E7%9A%84%E6%9E%84%E5%BB%BA%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如何将默认严重性级别更改为“警告”，以便 stylelint 不会破坏我的构建？</h2>\n<p>使用<a href=\"../configuration/#defaultseverity\"><code>defaultSeverity</code></a>配置选项。</p>\n<h2 id=\"我可以在一个-npm-包中捆绑多个可共享配置吗？\"><a href=\"#%E6%88%91%E5%8F%AF%E4%BB%A5%E5%9C%A8%E4%B8%80%E4%B8%AA-npm-%E5%8C%85%E4%B8%AD%E6%8D%86%E7%BB%91%E5%A4%9A%E4%B8%AA%E5%8F%AF%E5%85%B1%E4%BA%AB%E9%85%8D%E7%BD%AE%E5%90%97%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>我可以在一个 npm 包中捆绑多个可共享配置吗？</h2>\n<p>用户可能 <code>require()</code> 您 npm 包中的任何文件，所以您需要做的就是记录哪些路径指向配置（例如 <code>require('my-package/config-2')</code>）`）。</p>\n<h2 id=\"如何控制块的开大括号后的空白符？\"><a href=\"#%E5%A6%82%E4%BD%95%E6%8E%A7%E5%88%B6%E5%9D%97%E7%9A%84%E5%BC%80%E5%A4%A7%E6%8B%AC%E5%8F%B7%E5%90%8E%E7%9A%84%E7%A9%BA%E7%99%BD%E7%AC%A6%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如何控制块的开大括号后的空白符？</h2>\n<p>请参阅文档中的<a href=\"../about-rules/#-empty-line-before-%E5%92%8C--max-empty-lines-%E8%A7%84%E5%88%99\">这个部分</a>部分，该部分解释了 <code>* -empty-line-before</code> 规则如何工作。</p>\n<h2 id=\"如果我在配置对象中使用-extends，那每个规则的选项是会被合并还是覆盖？\"><a href=\"#%E5%A6%82%E6%9E%9C%E6%88%91%E5%9C%A8%E9%85%8D%E7%BD%AE%E5%AF%B9%E8%B1%A1%E4%B8%AD%E4%BD%BF%E7%94%A8-extends%EF%BC%8C%E9%82%A3%E6%AF%8F%E4%B8%AA%E8%A7%84%E5%88%99%E7%9A%84%E9%80%89%E9%A1%B9%E6%98%AF%E4%BC%9A%E8%A2%AB%E5%90%88%E5%B9%B6%E8%BF%98%E6%98%AF%E8%A6%86%E7%9B%96%EF%BC%9F\" class=\"phenomic-HeadingAnchor\">#</a>如果我在配置对象中使用 <code>extends</code>，那每个规则的选项是会被合并还是覆盖？</h2>\n<p>它们将会被覆盖。</p>\n<p><code>extends</code> 机制在<a href=\"../configuration/#extends\">配置文件中</a>有更详细的介绍：</p>\n<blockquote>\n<p>当一个配置继承另一个配置时，它从另一个配置的属性开始，然后添加并覆盖其中的内容。</p>\n</blockquote>\n<p>这种设计的原因记录在<a href=\"https://github.com/stylelint/stylelint/issues/1646#issuecomment-232779957\">#1646</a>中。</p>\n","__filename":"user-guide/faq.md","__url":"/user-guide/faq/","__resourceUrl":"/user-guide/faq/index.html","__dataUrl":"/user-guide/faq/index.html.2d2f3d2f16fe40f7471d6fca420dcc32.json"}