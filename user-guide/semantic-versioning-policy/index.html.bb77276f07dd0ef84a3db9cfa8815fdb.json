{"head":{"description":"语义版本控制策略 我们遵循语义版本控制。但是，由于 stylelint 作为代码质量工具的性质，我们为 stylelint 定义了以下策略： 补丁发布（旨在不破坏您的代码检查构建） 规则中的 bug 修复导致 stylelint 报告更少错误…","title":"语义版本控制策略"},"body":"<h1 id=\"语义版本控制策略\"><a href=\"#%E8%AF%AD%E4%B9%89%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%AD%96%E7%95%A5\" class=\"phenomic-HeadingAnchor\">#</a>语义版本控制策略</h1>\n<p>我们遵循<a href=\"http://semver.org\">语义版本控制</a>。但是，由于 stylelint 作为代码质量工具的性质，我们为 stylelint 定义了以下策略：</p>\n<ul>\n<li>\n<p>补丁发布（旨在不破坏您的代码检查构建）</p>\n<ul>\n<li>规则中的 bug 修复导致 stylelint 报告更少错误</li>\n<li>对命令行界面或核心（包括格式化程序）的 bug 修复</li>\n<li>改进文档。</li>\n<li>非面向用户的更改，例如重构代码或修改测试</li>\n<li>在发布失败后重新发布（即发布对任何人都不起作用的版本）</li>\n</ul>\n</li>\n<li>\n<p>次要释放（可能会破坏您的代码检查构建）</p>\n<ul>\n<li>规则中的 bug 修复导致 stylelint 报告更多错误</li>\n<li>创建新规则</li>\n<li>现有规则的新选项，默认情况下不会导致 stylelint 报告更多错误</li>\n<li>已存在的规则被弃用</li>\n<li>创建新的命令行界面功能</li>\n<li>创建新的公共API功能</li>\n<li>创建一个新的格式化程序</li>\n</ul>\n</li>\n<li>\n<p>主要发布（可能打破您的代码检查构建）</p>\n<ul>\n<li>对现有规则的记录行为进行更改会导致 stylelint 默认报告更多错误</li>\n<li>删除现有规则</li>\n<li>删除现有的格式化程序</li>\n<li>以不兼容的方式删除或更改命令行界面的一部分</li>\n<li>以不兼容的方式删除或更改部分公共 API</li>\n</ul>\n</li>\n</ul>\n","__filename":"user-guide/semantic-versioning-policy.md","__url":"/user-guide/semantic-versioning-policy/","__resourceUrl":"/user-guide/semantic-versioning-policy/index.html","__dataUrl":"/user-guide/semantic-versioning-policy/index.html.bb77276f07dd0ef84a3db9cfa8815fdb.json"}