{"head":{"description":"蓝图 强大、现代的代码检查和修复工具，适用于 CSS 和类 CSS 语言。 特性： 完整 - 覆盖所有标准 CSS 语法。 可扩展 - 具有多个扩展点。 可配置 - 没有默认设置和丰富的选项来定制代码检查工具。 强大 - 具有全面的测试覆盖范围和各种功能点。 一致 -…","title":"蓝图"},"body":"<h1 id=\"蓝图\"><a href=\"#%E8%93%9D%E5%9B%BE\" class=\"phenomic-HeadingAnchor\">#</a>蓝图</h1>\n<p>强大、现代的代码检查和修复工具，适用于 CSS 和类 CSS 语言。</p>\n<p>特性：</p>\n<ul>\n<li>完整 - 覆盖所有标准 CSS 语法。</li>\n<li>可扩展 - 具有多个扩展点。</li>\n<li>可配置 - 没有默认设置和丰富的选项来定制代码检查工具。</li>\n<li>强大 - 具有全面的测试覆盖范围和各种功能点。</li>\n<li>一致 - 与行为，命名和文档的约定。</li>\n<li>高性能 - 使用工具来测试和提高性能。</li>\n</ul>\n<h2 id=\"完备\"><a href=\"#%E5%AE%8C%E5%A4%87\" class=\"phenomic-HeadingAnchor\">#</a>完备</h2>\n<p>为以下三个方面提供内置规则：</p>\n<ul>\n<li><a href=\"../user-guide/rules/#%E5%8F%AF%E8%83%BD%E9%94%99%E8%AF%AF\">可能错误</a>。</li>\n<li><a href=\"../user-guide/rules/#%E9%99%90%E5%88%B6%E8%AF%AD%E8%A8%80%E5%8A%9F%E8%83%BD\">限制语言功能</a>。</li>\n<li><a href=\"../user-guide/rules/#%E9%A3%8E%E6%A0%BC%E9%97%AE%E9%A2%98\">风格问题</a>。</li>\n</ul>\n<h3 id=\"可能错误\"><a href=\"#%E5%8F%AF%E8%83%BD%E9%94%99%E8%AF%AF\" class=\"phenomic-HeadingAnchor\">#</a>可能错误</h3>\n<p>提供规则以捕获两种可能的错误：</p>\n<ul>\n<li>无效代码，例如无效的 16 进制颜色和未知的语言功能。</li>\n<li>有效但可能产生意外后果的代码，例如重复和覆盖。</li>\n</ul>\n<p>无效代码最好由新兴的专用工具处理，例如 <a href=\"https://github.com/csstree/csstree\">csstree</a> - 具有语法验证的语言解析器。作为一种权宜之计，当这些工具成熟时，为最简单的情况提供无效的代码规则。</p>\n<p>（将来，这些工具可以作为插件包装，以利用 <code>/* stylelint-* */</code> 命令注释，严重性级别和选项验证器等功能。）</p>\n<h3 id=\"限制语言功能\"><a href=\"#%E9%99%90%E5%88%B6%E8%AF%AD%E8%A8%80%E5%8A%9F%E8%83%BD\" class=\"phenomic-HeadingAnchor\">#</a>限制语言功能</h3>\n<p>提供规则以限制可以使用的语言功能，包括：</p>\n<ul>\n<li>强制执行最大优先级，通过限制优先级本身或者不同选择器，例如类，ID，属性等类型的出现</li>\n<li>强制执行 <em>在配置级别</em> 的最佳实践。例如不允许过渡的 <code>all</code> 关键字，因为它不是高效的。</li>\n<li>强制执行使用特征子集来提高代码库的一致性，例如限制允许的单位（<code>px</code> 或 <code>rem</code> 等）</li>\n<li>强制执行选择器和名称（例如那些自定义属性）的模式匹配。</li>\n</ul>\n<h3 id=\"风格问题\"><a href=\"#%E9%A3%8E%E6%A0%BC%E9%97%AE%E9%A2%98\" class=\"phenomic-HeadingAnchor\">#</a>风格问题</h3>\n<p>提供规则以强制执行各种风格约定，包括：</p>\n<ul>\n<li>空白符</li>\n<li>大小写</li>\n<li>引号</li>\n</ul>\n<p>有两种方法可以实施样式约定：</p>\n<ul>\n<li>通过机器算法美化打印代码（通常基于最大行长度）。</li>\n<li>人工格式化代码，然后机器修复/警告任何错误。</li>\n</ul>\n<p>前者由美化打印工具处理，如 <a href=\"https://github.com/prettier/prettier\">prettier</a>，而后者则由内置的风格规则来满足。</p>\n<p>此外，内置的风格规则和插件可配置为支持各种风格约定。这与美化打印工具形成对比，后者往往是倾向性的。声明块中属性的排序是一个争议性话题的例子，它缺乏一两个主导性的约定。<a href=\"https://www.npmjs.com/package/stylelint-order\"><code>stylelint-order</code></a> 插件遵循 stylelint 的哲学，可用于检查和修复各种排序约定。</p>\n<p>另一个例子是对一组 <em>相关</em> 规则使用单行风格，例如</p>\n<pre><code class=\"hljs   language-css\"><span class=\"hljs-comment\">/* 单行相关类 */</span>\n<span class=\"hljs-selector-class\">.class-1</span> { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">0</span>; }\n<span class=\"hljs-selector-class\">.class-2</span> { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">5px</span>; <span class=\"hljs-attribute\">right</span>: <span class=\"hljs-number\">0</span>; }\n<span class=\"hljs-selector-class\">.class-3</span> { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">8px</span>; <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>; }</code></pre>\n<p>内置风格规则可以配置为允许多行或单行风格，选择风格的权力属于用户，用户可以确定哪些规则是相关的。</p>\n<h2 id=\"可扩展\"><a href=\"#%E5%8F%AF%E6%89%A9%E5%B1%95\" class=\"phenomic-HeadingAnchor\">#</a>可扩展</h2>\n<p>提供多个扩展点，包括：</p>\n<ul>\n<li><a href=\"../developer-guide/plugins/\">插件</a> - 构建社区规则以支持方法，工具集，非标准 CSS 功能或非常具体的用例。</li>\n<li><a href=\"../user-guide/processors/\">处理器</a> - 检查非样式表文件中的 CSS。</li>\n<li><a href=\"../user-guide/configuration/#extends\">可继承配置</a> - 继承和共享配置。</li>\n<li><a href=\"../developer-guide/formatters/\">格式化程序</a> - 格式化 stylelint 结果对象。</li>\n<li><a href=\"../user-guide/node-api/#customsyntax\">自定义语法</a> - 使用任何与 PostCSS 兼容的语法模块。</li>\n</ul>\n<h2 id=\"强大\"><a href=\"#%E5%BC%BA%E5%A4%A7\" class=\"phenomic-HeadingAnchor\">#</a>强大</h2>\n<p>提供强大的<a href=\"../developer-guide/rules/#%E7%BC%96%E5%86%99%E6%B5%8B%E8%AF%95\">综合测试套件</a>工具，包括：</p>\n<ul>\n<li>高覆盖率，目前超过95％。</li>\n<li>各种规则的功能点固定装置，目前超过10000个。</li>\n</ul>\n<h2 id=\"一致\"><a href=\"#%E4%B8%80%E8%87%B4\" class=\"phenomic-HeadingAnchor\">#</a>一致</h2>\n<p>始终保持一致性，包括：</p>\n<ul>\n<li>一致的<a href=\"../developer-guide/rules/#%E4%B8%BA%E8%A7%84%E5%88%99%E5%91%BD%E5%90%8D\">命名</a>、<a href=\"../developer-guide/rules/#%E7%A1%AE%E7%AB%8B%E9%80%89%E9%A1%B9\">选项</a>、<a href=\"../developer-guide/rules/#%E7%A1%AE%E7%AB%8B%E8%BF%9D%E8%A7%84%E6%B6%88%E6%81%AF\">违规消息</a>、<a href=\"../developer-guide/rules/#%E7%BC%96%E5%86%99%E8%87%AA%E8%BF%B0%E6%96%87%E6%A1%A3\">文档</a> 和规则内的非标准语法<a href=\"../developer-guide/rules/#%E7%BC%96%E5%86%99%E8%A7%84%E5%88%99\">处理</a>.</li>\n<li>一致的<a href=\"../developer-guide/rules/#%E6%94%B6%E5%BD%95%E6%A0%87%E5%87%86\">收录标准</a>.</li>\n</ul>\n<h2 id=\"执行\"><a href=\"#%E6%89%A7%E8%A1%8C\" class=\"phenomic-HeadingAnchor\">#</a>执行</h2>\n<p>提供快速工具，以及测试和改进性能的方法，包括：</p>\n<ul>\n<li>单个规则的性能<a href=\"../developer-guide/rules/#%E6%8F%90%E9%AB%98%E8%A7%84%E5%88%99%E7%9A%84%E6%80%A7%E8%83%BD\">基准测试</a>。</li>\n</ul>\n","__filename":"VISION.md","__url":"/VISION/","__resourceUrl":"/VISION/index.html","__dataUrl":"/VISION/index.html.40da6539dac271b6f78682a7eecf83eb.json"}