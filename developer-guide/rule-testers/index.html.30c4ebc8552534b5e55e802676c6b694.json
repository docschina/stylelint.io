{"head":{"description":"规则测试工具 stylelint 规则需要大量的测试。所以我们构建了一个专门的 stylelint 规则测试格式，以加速大规模生成一致，有效的规则测试。 我们有一个用于描述测试的架构，以及用于创建“规则测试工具”的函数，其使用测试框架（例如，tape 或…","title":"规则测试工具"},"body":"<h1 id=\"规则测试工具\"><a href=\"#%E8%A7%84%E5%88%99%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7\" class=\"phenomic-HeadingAnchor\">#</a>规则测试工具</h1>\n<p>stylelint 规则需要<em>大量的</em>测试。所以我们构建了一个专门的 stylelint 规则测试格式，以加速大规模生成一致，有效的规则测试。</p>\n<p>我们有一个用于描述测试的架构，以及用于创建“规则测试工具”的函数，其使用测试框架（例如，tape 或 Mocha）来解析该架构。</p>\n<p>开发插件时，您可以使用以下规则测试工具或创建自己的工具。</p>\n<ul>\n<li>stylelint-test-rule-tape</li>\n<li>stylelint-test-rule-mocha</li>\n<li>stylelint-test-rule-ava</li>\n</ul>\n<h2 id=\"使用规则测试工具\"><a href=\"#%E4%BD%BF%E7%94%A8%E8%A7%84%E5%88%99%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7\" class=\"phenomic-HeadingAnchor\">#</a>使用规则测试工具</h2>\n<p>要使用您选择的规则测试程序，请执行以下操作：</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// `testRule` = 导入的规则测试工具</span>\ntestRule(rule, testGroupDescription)</code></pre>\n<p><code>rule</code> 正是是您正在测试的规则（一个函数）。</p>\n<p><code>testGroupDescription</code> 是一个适合以下架构的对象。</p>\n<h3 id=\"测试组架构\"><a href=\"#%E6%B5%8B%E8%AF%95%E7%BB%84%E6%9E%B6%E6%9E%84\" class=\"phenomic-HeadingAnchor\">#</a>测试组架构</h3>\n<p>每个测试组对象都描述了具有特定配置的特定规则的一组测试用例。</p>\n<p>所需属性：</p>\n<ul>\n<li><code>ruleName</code> {string}：规则的名称。用于生成的测试用例描述。</li>\n<li><code>config</code> {any}：此测试组的规则配置。应该与 <code>.stylelintrc</code> 中使用的规则配置格式相匹配。</li>\n<li>\n<p><code>accept</code> {array}：<em>不应违反规则</em>的测试用例的对象数组。每个对象都具有以下属性：</p>\n<ul>\n<li><code>code</code> {string}：要检查的 CSS 源码。</li>\n<li><code>description</code> {string}：<em>可选。</em> 测试用例描述。</li>\n<li><code>only</code> {boolean}：如果为 <code>true</code>，只运行这个测试用例。</li>\n</ul>\n</li>\n<li>\n<p><code>reject</code> {array}：<em>应该违反规则</em> 的测试用例的对象数组。每个对象都具有以下属性：</p>\n<ul>\n<li><code>code</code> {string}：要检查的 CSS 源码。</li>\n<li><code>message</code> {string}：预期违规的消息。</li>\n<li><code>line</code> {number}：<em>可选但推荐使用。</em> 预期违规的行号。如果省略，则不会检查。</li>\n<li><code>column</code> {number}：<em>可选但推荐使用。</em> 预期违规的列号。如果省略，则不会检查。</li>\n<li><code>description</code> {string}：<em>可选。</em> 测试用例描述。</li>\n<li><code>only</code> {boolean}：如果为 <code>true</code>，只运行这个测试用例。</li>\n<li><code>fixed</code> {string}：<em>如果测试架构启用了 <code>fix</code>，则为必需。</em> 针对 <code>code</code> 属性自动修复的结果。</li>\n</ul>\n</li>\n</ul>\n<p>可选属性：</p>\n<ul>\n<li><code>syntax</code> {\"css\"|\"css-in-js\"|\"html\"|\"less\"|\"markdown\"|\"sass\"|\"scss\"|\"sugarss\"}：默认为 <code>\"css\"</code>。其他设置使用特殊解析器。</li>\n<li><code>skipBasicChecks</code> {boolean}：默认为 <code>false</code>。如果为 <code>true</code>，则不会执行一些基本检查（应该几乎总是包括在内）。您可以在 <code>lib/testUtils/basicChecks.js</code> 中查看它们。</li>\n<li><code>preceedingPlugins</code> {array}：应该在测试 CSS 之前运行的 PostCSS 插件数组。</li>\n<li><code>fix</code> {boolean}：默认为 <code>false</code>。如果为 <code>true</code>，则每个 <code>reject</code> 测试用例都将进行自动修复功能测试。<em>如果规则具有自动修复，则为必需项。</em></li>\n</ul>\n<h2 id=\"创建规则测试工具\"><a href=\"#%E5%88%9B%E5%BB%BA%E8%A7%84%E5%88%99%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7\" class=\"phenomic-HeadingAnchor\">#</a>创建规则测试工具</h2>\n<p>stylelint 本身公开了一种几乎可以用任何测试框架创建规则测试工具的方法。</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">var</span> testRule = stylelint.createRuleTester(equalityCheck)</code></pre>\n<p>传入 <code>equalityCheck</code> 函数。给定一些信息，此检查工具应使用您喜欢的任何测试运行器来执行相等性检查。</p>\n<p><code>equalityCheck</code> 函数应该接受两个参数：</p>\n<ul>\n<li><code>processCss</code> {Promise}：一个 Promise，释为您需要检查的对照组的数组（文档附后）。</li>\n<li>\n<p><code>context</code> {object}：包含您可能需要的其他信息的对象：</p>\n<ul>\n<li><code>caseDescription</code> {string}：整个测试用例的描述。最终打印会像这样：</li>\n</ul>\n<pre><code class=\"hljs language-bash\">> rule: value-list-comma-space-before\n> config: <span class=\"hljs-string\">\"always-single-line\"</span>\n> code: <span class=\"hljs-string\">\"a { background-size: 0 ,0;\\n}\"</span></code></pre>\n<ul>\n<li><code>comparisonCount</code> {number}：需要执行的比较次数（例如对 tape 有用）。</li>\n<li><code>completeAssertionDescription</code> {string}：虽然每个单独的对照组可能有自己的描述，但这个是对整个断言的描述（例如对 Mocha 有用）。</li>\n<li><code>only</code> {boolean}：如果为 <code>true</code>，那么测试运行器应该只运行这个测试用例（例如 tape 中的 <code>test.only</code>，Mocha中的 <code>describe.only</code>）。</li>\n</ul>\n</li>\n</ul>\n<p><code>processCss</code> 是一个 Promise，它释为对照组的数组。每个对照组都具有以下属性：</p>\n<ul>\n<li><code>actual</code> {any}：某些实际值。</li>\n<li><code>expected</code> {any}：某些预期值。</li>\n<li><code>description</code> {string}：一个（可能是空的）比较的描述。</li>\n</ul>\n<p>在 <code>equalityCheck</code> 函数中，您需要确保执行以下操作：</p>\n<ul>\n<li>设定测试用例。</li>\n<li>当 <code>processCss</code> 解析后，遍历每个对照组。</li>\n<li>对每个对照组进行断言 <code>actual === expected</code> 检查。</li>\n</ul>\n<p>返回 <code>testRule</code> 函数（如上所述）。</p>\n","__filename":"developer-guide/rule-testers.md","__url":"/developer-guide/rule-testers/","__resourceUrl":"/developer-guide/rule-testers/index.html","__dataUrl":"/developer-guide/rule-testers/index.html.30c4ebc8552534b5e55e802676c6b694.json"}